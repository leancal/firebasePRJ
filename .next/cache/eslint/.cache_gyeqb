[{"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\pages\\404.js":"1","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\pages\\admin\\index.js":"2","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\pages\\api\\form-submit.js":"3","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\pages\\api\\mailer.js":"4","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\pages\\buscar\\index.js":"5","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\pages\\categorias\\[cat].js":"6","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\pages\\contacto\\gracias.js":"7","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\pages\\contacto\\index.js":"8","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\pages\\contacto-soporte\\gracias.js":"9","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\pages\\contacto-soporte\\index.js":"10","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\pages\\discontinuos\\index.js":"11","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\pages\\editProduct\\index.js":"12","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\pages\\index.js":"13","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\pages\\lineas\\index.js":"14","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\pages\\lineas\\[lin].js":"15","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\pages\\newProducts\\index.js":"16","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\pages\\preguntas-frecuentes\\index.js":"17","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\pages\\productos\\[prod].js":"18","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\pages\\quienes-somos\\index.js":"19","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\pages\\sobre-nosotros\\index.js":"20","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\pages\\soporte\\index.js":"21","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\pages\\terminos-y-condiciones\\index.js":"22","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\pages\\_app.js":"23","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\AboutUs\\index.jsx":"24","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\AccordionItem\\index.js":"25","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\AddProduct\\BannerForm\\index.js":"26","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\AddProduct\\FeaturedFeatureForm\\index.js":"27","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\AddProduct\\FeaturesForm\\index.js":"28","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\AddProduct\\IncludesForm\\index.js":"29","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\AddProduct\\index.js":"30","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\AddProduct\\ProductDataForm\\index.js":"31","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\AdminPanel\\Home.js":"32","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\AdminPanel\\UserAuth.js":"33","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\Alert\\index.js":"34","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\CategoryBanner\\index.js":"35","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\CategoryLineSwiper\\index.js":"36","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\CategoryMainBanner\\index.jsx":"37","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\CategorySwiper\\index.js":"38","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\Constrictor\\index.js":"39","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\ContactContent\\index.js":"40","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\ContactContent\\soporte.js":"41","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\Discontinuous\\index.jsx":"42","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\DiscoverBanner\\DiscoverButton.js":"43","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\DiscoverBanner\\index.js":"44","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\EditProduct\\index.js":"45","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\Favicon\\index.js":"46","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\Footer\\index.js":"47","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\Head\\index.js":"48","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\IncludesItem\\index.js":"49","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\LineBanner\\index.jsx":"50","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\LineContainer\\index.js":"51","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\LineProductCard\\index.jsx":"52","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\LinesContainer\\index.js":"53","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\Loading\\index.js":"54","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\MainBanner\\index.jsx":"55","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\MetaTags\\index.js":"56","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\MultipleProdContainer\\index.jsx":"57","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\Nav\\index.js":"58","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\NavItem\\index.js":"59","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\NotFound\\index.js":"60","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\Product\\index.js":"61","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\ProductBanners\\index.js":"62","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\ProductBanners\\indexOld.js":"63","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\ProductCard\\index.js":"64","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\ProductContent\\index.js":"65","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\ProductFeatures\\index.js":"66","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\ProductMorePhotos\\index.js":"67","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\ProductSpecsTable\\index.js":"68","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\ProductVideos\\index.js":"69","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\SearchButton\\index.js":"70","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\SearchContainer\\index.jsx":"71","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\SearchContainer\\indexFull.jsx":"72","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\SocialContainer\\index.js":"73","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\StoreButton\\index.js":"74","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\SupportForms\\index.js":"75","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\SupportPageContent\\index.jsx":"76","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\ThanksAndRedir\\index.js":"77","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\YoutubeBanner\\index.js":"78"},{"size":120,"mtime":1694096070180,"results":"79","hashOfConfig":"80"},{"size":150,"mtime":1695233327834,"results":"81","hashOfConfig":"80"},{"size":148,"mtime":1694096070182,"results":"82","hashOfConfig":"80"},{"size":1093,"mtime":1694096070182,"results":"83","hashOfConfig":"80"},{"size":199,"mtime":1706216152669,"results":"84","hashOfConfig":"80"},{"size":8220,"mtime":1705424210967,"results":"85","hashOfConfig":"80"},{"size":142,"mtime":1694096070186,"results":"86","hashOfConfig":"80"},{"size":131,"mtime":1694096070187,"results":"87","hashOfConfig":"80"},{"size":142,"mtime":1694096070184,"results":"88","hashOfConfig":"80"},{"size":146,"mtime":1694096070185,"results":"89","hashOfConfig":"80"},{"size":134,"mtime":1701277873715,"results":"90","hashOfConfig":"80"},{"size":153,"mtime":1696597315872,"results":"91","hashOfConfig":"80"},{"size":1330,"mtime":1706721895559,"results":"92","hashOfConfig":"80"},{"size":509,"mtime":1694096070191,"results":"93","hashOfConfig":"80"},{"size":3128,"mtime":1706298933440,"results":"94","hashOfConfig":"80"},{"size":147,"mtime":1695237726624,"results":"95","hashOfConfig":"80"},{"size":68,"mtime":1694096070192,"results":"96","hashOfConfig":"80"},{"size":3550,"mtime":1703262938823,"results":"97","hashOfConfig":"80"},{"size":77,"mtime":1694096070194,"results":"98","hashOfConfig":"80"},{"size":126,"mtime":1694096070194,"results":"99","hashOfConfig":"80"},{"size":154,"mtime":1694096070195,"results":"100","hashOfConfig":"80"},{"size":8171,"mtime":1694096070195,"results":"101","hashOfConfig":"80"},{"size":1813,"mtime":1698242276813,"results":"102","hashOfConfig":"80"},{"size":1482,"mtime":1703681057338,"results":"103","hashOfConfig":"80"},{"size":618,"mtime":1694096070091,"results":"104","hashOfConfig":"80"},{"size":2278,"mtime":1704221926527,"results":"105","hashOfConfig":"80"},{"size":4930,"mtime":1704222929720,"results":"106","hashOfConfig":"80"},{"size":4873,"mtime":1706713267085,"results":"107","hashOfConfig":"80"},{"size":4171,"mtime":1706713407657,"results":"108","hashOfConfig":"80"},{"size":44433,"mtime":1707141959729,"results":"109","hashOfConfig":"80"},{"size":7315,"mtime":1704221344951,"results":"110","hashOfConfig":"80"},{"size":10829,"mtime":1704200960832,"results":"111","hashOfConfig":"80"},{"size":3937,"mtime":1695752876640,"results":"112","hashOfConfig":"80"},{"size":294,"mtime":1701873656729,"results":"113","hashOfConfig":"80"},{"size":1123,"mtime":1696257728455,"results":"114","hashOfConfig":"80"},{"size":2757,"mtime":1707162251755,"results":"115","hashOfConfig":"80"},{"size":916,"mtime":1706720729180,"results":"116","hashOfConfig":"80"},{"size":1559,"mtime":1706185091804,"results":"117","hashOfConfig":"80"},{"size":1768,"mtime":1694096070098,"results":"118","hashOfConfig":"80"},{"size":2692,"mtime":1694096070099,"results":"119","hashOfConfig":"80"},{"size":1232,"mtime":1694096070100,"results":"120","hashOfConfig":"80"},{"size":1797,"mtime":1703248957607,"results":"121","hashOfConfig":"80"},{"size":323,"mtime":1694096070102,"results":"122","hashOfConfig":"80"},{"size":2281,"mtime":1694096070103,"results":"123","hashOfConfig":"80"},{"size":60364,"mtime":1707160091518,"results":"124","hashOfConfig":"80"},{"size":1468,"mtime":1694096070104,"results":"125","hashOfConfig":"80"},{"size":3018,"mtime":1694096070105,"results":"126","hashOfConfig":"80"},{"size":618,"mtime":1694096070107,"results":"127","hashOfConfig":"80"},{"size":460,"mtime":1701888986123,"results":"128","hashOfConfig":"80"},{"size":559,"mtime":1694096070110,"results":"129","hashOfConfig":"80"},{"size":551,"mtime":1694096070111,"results":"130","hashOfConfig":"80"},{"size":595,"mtime":1705408191550,"results":"131","hashOfConfig":"80"},{"size":293,"mtime":1694096070112,"results":"132","hashOfConfig":"80"},{"size":182,"mtime":1694096070112,"results":"133","hashOfConfig":"80"},{"size":907,"mtime":1694096070113,"results":"134","hashOfConfig":"80"},{"size":54,"mtime":1694096070113,"results":"135","hashOfConfig":"80"},{"size":8312,"mtime":1707163698473,"results":"136","hashOfConfig":"80"},{"size":1653,"mtime":1694096070115,"results":"137","hashOfConfig":"80"},{"size":1498,"mtime":1694096070116,"results":"138","hashOfConfig":"80"},{"size":517,"mtime":1694096070118,"results":"139","hashOfConfig":"80"},{"size":1080,"mtime":1694096070119,"results":"140","hashOfConfig":"80"},{"size":636,"mtime":1695843592246,"results":"141","hashOfConfig":"80"},{"size":959,"mtime":1694096070121,"results":"142","hashOfConfig":"80"},{"size":4718,"mtime":1706643161793,"results":"143","hashOfConfig":"80"},{"size":4847,"mtime":1699388474940,"results":"144","hashOfConfig":"80"},{"size":3546,"mtime":1705437519866,"results":"145","hashOfConfig":"80"},{"size":1509,"mtime":1694096070126,"results":"146","hashOfConfig":"80"},{"size":6723,"mtime":1707138651798,"results":"147","hashOfConfig":"80"},{"size":791,"mtime":1694096070127,"results":"148","hashOfConfig":"80"},{"size":356,"mtime":1694096070127,"results":"149","hashOfConfig":"80"},{"size":12381,"mtime":1706216120933,"results":"150","hashOfConfig":"80"},{"size":7933,"mtime":1701097866082,"results":"151","hashOfConfig":"80"},{"size":533,"mtime":1694096070130,"results":"152","hashOfConfig":"80"},{"size":558,"mtime":1694096070131,"results":"153","hashOfConfig":"80"},{"size":6646,"mtime":1694096070131,"results":"154","hashOfConfig":"80"},{"size":1500,"mtime":1694096070131,"results":"155","hashOfConfig":"80"},{"size":570,"mtime":1694096070132,"results":"156","hashOfConfig":"80"},{"size":549,"mtime":1694096070133,"results":"157","hashOfConfig":"80"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16ircuu",{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203"},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228"},{"filePath":"229","messages":"230","suppressedMessages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","suppressedMessages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","suppressedMessages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","suppressedMessages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","suppressedMessages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","suppressedMessages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","suppressedMessages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","suppressedMessages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","suppressedMessages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","suppressedMessages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","suppressedMessages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","suppressedMessages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","suppressedMessages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"268","messages":"269","suppressedMessages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","suppressedMessages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"274","messages":"275","suppressedMessages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"277","messages":"278","suppressedMessages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"280","messages":"281","suppressedMessages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"283","messages":"284","suppressedMessages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"286","messages":"287","suppressedMessages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"289","messages":"290","suppressedMessages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"292","messages":"293","suppressedMessages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295"},{"filePath":"296","messages":"297","suppressedMessages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"299","messages":"300","suppressedMessages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"302","messages":"303","suppressedMessages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"305","messages":"306","suppressedMessages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"308","messages":"309","suppressedMessages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"311","messages":"312","suppressedMessages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"314","messages":"315","suppressedMessages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"317","messages":"318","suppressedMessages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"320","messages":"321","suppressedMessages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"323","messages":"324","suppressedMessages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"326","messages":"327","suppressedMessages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"329","messages":"330","suppressedMessages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"332","messages":"333","suppressedMessages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"335","messages":"336","suppressedMessages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"338","messages":"339","suppressedMessages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"341","messages":"342","suppressedMessages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"344","messages":"345","suppressedMessages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"347","messages":"348","suppressedMessages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"350","messages":"351","suppressedMessages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"353","messages":"354","suppressedMessages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"356","messages":"357","suppressedMessages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"359","messages":"360","suppressedMessages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"362","messages":"363","suppressedMessages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"365","messages":"366","suppressedMessages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"368","messages":"369","suppressedMessages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"371","messages":"372","suppressedMessages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"374","messages":"375","suppressedMessages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"377","messages":"378","suppressedMessages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"380","messages":"381","suppressedMessages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"383","messages":"384","suppressedMessages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"386","messages":"387","suppressedMessages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"389","messages":"390","suppressedMessages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"392","messages":"393","suppressedMessages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\pages\\404.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\pages\\admin\\index.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\pages\\api\\form-submit.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\pages\\api\\mailer.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\pages\\buscar\\index.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\pages\\categorias\\[cat].js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\pages\\contacto\\gracias.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\pages\\contacto\\index.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\pages\\contacto-soporte\\gracias.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\pages\\contacto-soporte\\index.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\pages\\discontinuos\\index.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\pages\\editProduct\\index.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\pages\\index.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\pages\\lineas\\index.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\pages\\lineas\\[lin].js",["395"],[],"import Image from \"next/image\";\r\nimport { useRouter } from \"next/router\";\r\nimport NotFound from \"../../components/NotFound\";\r\nimport Head from \"next/head\";\r\nimport LineBanner from \"../../components/LineBanner\";\r\nimport LineProductCard from \"../../components/LineProductCard\";\r\nimport { getDocs, collection, query, where } from \"firebase/firestore\";\r\nimport { db } from \"../../firebase\";\r\nimport lineas from \"../../content/lineas\";\r\n\r\nexport default function Lines({ linea, products }) {\r\n  console.log(\"PRODUCTOS:\", products);\r\n  const url = useRouter();\r\n  const { lin } = url.query;\r\n\r\n  // Simula la consulta a Firebase para obtener información de la línea\r\n  const lineaData = lineas.find((linea) => linea.link === `/lineas/${lin}`);\r\n  console.log(\"Línea actual:\", lineaData);\r\n\r\n  // Verifica si `lineaData` contiene la información esperada\r\n  if (!lineaData) {\r\n    return <NotFound desc={`No se ha encontrado la línea \"${lin}\"`} />;\r\n  }\r\n\r\n  // Verifica si `lineaData.name` tiene el valor esperado\r\n  console.log(\"lineaData.name:\", lineaData.name);\r\n\r\n  // Filtra los productos según la línea actual y otros criterios\r\n  const prod = products.filter((e) => {\r\n    console.log(\"Producto a filtrar:\", e);\r\n    return e.linea === lineaData.name;\r\n  });\r\n  console.log(\"Productos filtrados:\", prod);\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>{`Línea ${lineaData.displayName} | Aiwa Electronics`}</title>\r\n      </Head>\r\n      <main className={`linea ${lin}`}>\r\n        <LineBanner line={lineaData} />\r\n        <section className='line-products'>\r\n          {prod.map((e, i) => <LineProductCard prod={e} key={i} />)}\r\n          <div className=\"section-bg\">\r\n            <Image src={lineaData.background} fill />\r\n          </div>\r\n        </section>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport async function getStaticProps({ params }) {\r\n  const { lin } = params;\r\n\r\n  // Realiza una consulta a la base de datos de Firebase para obtener productos de la línea\r\n  const productsCollectionRef = collection(db, \"audio\");\r\n  const productsQuery = query(productsCollectionRef, where(\"linea\", \"in\", [\"infinit\", \"flama\", \"ring\", \"party\", \"waterproof\"]));\r\n  const productsSnapshot = await getDocs(productsQuery);\r\n  console.log(\"Snapshot de productos desde Firebase:\", productsSnapshot);\r\n\r\n  const productsData = productsSnapshot.docs.map((doc) => {\r\n    const data = doc.data();\r\n    console.log(\"Producto desde Firestore:\", data);\r\n    return data;\r\n  });\r\n  console.log(\"Productos desde Firebase:\", productsData);\r\n\r\n  // Simula la consulta a Firebase para obtener información de la línea\r\n  const lineaData = lineas.find((linea) => linea.link === `/lineas/${lin}`);\r\n\r\n  return {\r\n    props: {\r\n      linea: lineaData,\r\n      products: productsData,\r\n    },\r\n  };\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const paths = [\r\n    { params: { lin: \"infinit\" } },\r\n    { params: { lin: \"flama\" } },\r\n    { params: { lin: \"ring\" } },\r\n    { params: { lin: \"party\" } },\r\n    { params: { lin: \"waterproof\" } },\r\n  ];\r\n\r\n  return {\r\n    paths,\r\n    fallback: false, // puede ser true o 'blocking'\r\n  };\r\n}\r\n","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\pages\\newProducts\\index.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\pages\\preguntas-frecuentes\\index.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\pages\\productos\\[prod].js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\pages\\quienes-somos\\index.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\pages\\sobre-nosotros\\index.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\pages\\soporte\\index.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\pages\\terminos-y-condiciones\\index.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\pages\\_app.js",["396"],[],"import '../styles/main.scss'\r\nimport '../styles/_login.scss'\r\nimport '../styles/home.scss'\r\nimport Nav from '../components/Nav'\r\nimport Footer from '../components/Footer'\r\nimport Head from 'next/head';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { AuthProvider } from '../utils/AuthContext';\r\nimport Favicon from '../components/Favicon';\r\nimport HeadThings from '../components/Head';\r\nimport Script from 'next/script';\r\nimport { useEffect, useState } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport { auth } from '../firebase';\r\n\r\nfunction MyApp({ Component, pageProps }) {\r\n  const router = useRouter();\r\n\r\n  const [presentUser, setPresentUser] = useState({});\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged(\r\n      user => {\r\n        if (user) {\r\n          setPresentUser({\r\n            uid: user.uid,\r\n            email: user.email\r\n          })\r\n\r\n        } else {\r\n          setPresentUser(null);\r\n        }\r\n      }\r\n    )\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    // Obtén el enlace solicitado\r\n    const link = router.query.link;\r\n\r\n    // Verifica si el enlace coincide con el enlace deseado\r\n    if (link === '/audio/party/AW-T2022.html') {\r\n      // Redirige al nuevo enlace destino del lado del cliente\r\n      router.push('/productos/AW-T2022/');\r\n    }\r\n  }, [router.query.link]);\r\n\r\n  const theme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main: '#222'\r\n      }\r\n    }\r\n  });\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Head>\r\n        <HeadThings />\r\n        <Favicon />\r\n      </Head>\r\n      <Nav />\r\n      <AuthProvider> {/* Envuelve tu aplicación con el proveedor de autenticación */}\r\n        <Component {...pageProps} />\r\n      </AuthProvider>\r\n      <Footer />\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default MyApp\r\n","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\AboutUs\\index.jsx",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\AccordionItem\\index.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\AddProduct\\BannerForm\\index.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\AddProduct\\FeaturedFeatureForm\\index.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\AddProduct\\FeaturesForm\\index.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\AddProduct\\IncludesForm\\index.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\AddProduct\\index.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\AddProduct\\ProductDataForm\\index.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\AdminPanel\\Home.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\AdminPanel\\UserAuth.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\Alert\\index.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\CategoryBanner\\index.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\CategoryLineSwiper\\index.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\CategoryMainBanner\\index.jsx",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\CategorySwiper\\index.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\Constrictor\\index.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\ContactContent\\index.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\ContactContent\\soporte.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\Discontinuous\\index.jsx",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\DiscoverBanner\\DiscoverButton.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\DiscoverBanner\\index.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\EditProduct\\index.js",["397"],[],"import React, { useState, useEffect } from 'react';\r\nimport { getFirestore, collection, getDocs, doc, updateDoc, getDoc, deleteDoc } from 'firebase/firestore';\r\nimport { ref, uploadBytes, getDownloadURL, deleteObject, list, getStorage } from 'firebase/storage';\r\nimport { lvOneCat, lvTwoCat } from '../../content/categories';\r\nimport Admin from '../../pages/admin';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport app, { storage } from '../../firebase';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { useRouter } from 'next/router';\r\nimport { useAuth } from '../../utils/AuthContext';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\n\r\nconst EditProduct = () => {\r\n  const router = useRouter();\r\n  const { currentUser } = useAuth();\r\n  const [allFeatures, setAllFeatures] = useState([]);\r\n  const [selectedFeatures, setSelectedFeatures] = useState([]);\r\n  const [editedFeatureValues, setEditedFeatureValues] = useState({});\r\n  const [products, setProducts] = useState([]);\r\n  const [selectedProduct, setSelectedProduct] = useState(null);\r\n  const [selectedCollection, setSelectedCollection] = useState('headsets');\r\n  const [categories, setCategories] = useState([]);\r\n  const [product, setProduct] = useState({\r\n    categories: lvOneCat[0]?.id || '',\r\n    secondCategory: '',\r\n    gen: '',\r\n  });\r\n  const [secondCategories, setSecondCategories] = useState([]);\r\n  const [selectedProductImages, setSelectedProductImages] = useState([]);\r\n  const [newProductImages, setNewProductImages] = useState([]);\r\n  const [areNewImagesUploaded, setAreNewImagesUploaded] = useState(false);\r\n  const [isUpdateImagesClicked, setIsUpdateImagesClicked] = useState(false);\r\n  const [showBannerAddedAlert, setShowBannerAddedAlert] = useState(false);\r\n  const [editedBanner, setEditedBanner] = useState({\r\n    title: '',\r\n    img: '',\r\n    desc: '',\r\n  });\r\n  const [showNewBannerForm, setShowNewBannerForm] = useState(false);\r\n  const [selectedBannerIndex, setSelectedBannerIndex] = useState(null);\r\n  const [uniqueUpdatedImages, setUniqueUpdatedImages] = useState([])\r\n  const [showBannerEditedAlert, setShowBannerEditedAlert] = useState(false);\r\n  const [deletedImages, setDeletedImages] = useState([]);\r\n  const [newBanner, setNewBanner] = useState({\r\n    title: '',\r\n    img: '',\r\n    desc: '',\r\n  });\r\n  const [isProductPublished, setIsProductPublished] = useState(true);\r\n  const [isPublished, setIsPublished] = useState(selectedProduct ? selectedProduct.published : true);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [productIncludesData, setProductIncludesData] = useState([]);\r\n  const [includesData, setIncludesData] = useState([]);\r\n  const [allIncludes, setAllIncludes] = useState([]);\r\n  const [selectedInclude, setSelectedInclude] = useState(null);\r\n  const [selectedFeaturedFeatures, setSelectedFeaturedFeatures] = useState([]);\r\n  const [featuredFeatures, setFeaturedFeatures] = useState([]);\r\n  const [allFeaturedFeaturesList, setAllFeaturedFeaturesList] = useState([]);\r\n  const [selectedFeatureToAdd, setSelectedFeatureToAdd] = useState('');\r\n\r\n\r\n  useEffect(() => {\r\n    if (selectedProduct) {\r\n      setIsPublished(selectedProduct.published);\r\n    }\r\n  }, [selectedProduct]);\r\n\r\n  const handleTogglePublished = () => {\r\n    setIsPublished((prevIsPublished) => !prevIsPublished);\r\n  };\r\n  useEffect(() => {\r\n    // Verificar el estado de publicación del producto\r\n    if (selectedProduct && selectedProduct.published === false) {\r\n      setIsProductPublished(false);\r\n    } else {\r\n      setIsProductPublished(true);\r\n    }\r\n  }, [selectedProduct]);\r\n\r\n\r\n  const filteredProducts = products.filter((product) =>\r\n    product.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    product.sku.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n  useEffect(() => {\r\n    // Obtener todos los productos desde Firebase Firestore\r\n    const fetchProducts = async () => {\r\n      const db = getFirestore(app);\r\n      const productsCollection = collection(db, selectedCollection || 'headsets');\r\n      const querySnapshot = await getDocs(productsCollection);\r\n      const productsData = [];\r\n\r\n      querySnapshot.forEach((docSnapshot) => {\r\n        productsData.push({\r\n          id: docSnapshot.id,\r\n          ...docSnapshot.data(),\r\n        });\r\n      });\r\n\r\n      setProducts(productsData);\r\n    };\r\n\r\n    fetchProducts();\r\n  }, [selectedCollection]);\r\n  useEffect(() => {\r\n    // Obtener las características desde Firebase Firestore\r\n    const fetchFeatures = async () => {\r\n      const db = getFirestore(app);\r\n      const featuresCollection = collection(db, 'features'); // Reemplaza 'features' con la colección real\r\n      const querySnapshot = await getDocs(featuresCollection);\r\n      const featuresData = [];\r\n\r\n      querySnapshot.forEach((docSnapshot) => {\r\n        featuresData.push({\r\n          id: docSnapshot.id,\r\n          ...docSnapshot.data(),\r\n        });\r\n      });\r\n\r\n      setAllFeatures(featuresData);\r\n    };\r\n\r\n    fetchFeatures();\r\n  }, []);\r\n  useEffect(() => {\r\n    // Obtener las características del producto desde Firebase Firestore\r\n    const getFeaturesForProduct = async () => {\r\n      if (!selectedProduct || !selectedCollection) {\r\n        console.error('ID de producto o colección no válidos');\r\n        return;\r\n      }\r\n\r\n      const db = getFirestore(app);\r\n      const productRef = doc(db, selectedCollection, selectedProduct.id);\r\n\r\n      try {\r\n        const docSnapshot = await getDoc(productRef);\r\n\r\n        if (docSnapshot.exists()) {\r\n          const productData = docSnapshot.data();\r\n          setSelectedFeatures(productData.features || []);\r\n        } else {\r\n          console.error('El producto no existe en la base de datos.');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al obtener las características del producto:', error);\r\n      }\r\n    };\r\n\r\n    getFeaturesForProduct();\r\n  }, [selectedProduct, selectedCollection]);\r\n  useEffect(() => {\r\n    // Obtener las categorías disponibles desde Firebase Firestore\r\n    const fetchCategories = async () => {\r\n      const db = getFirestore(app);\r\n      const categoriesCollection = collection(db, 'categories'); // Reemplaza 'categories' con la colección real de categorías\r\n      const querySnapshot = await getDocs(categoriesCollection);\r\n      const categoriesData = [];\r\n\r\n      querySnapshot.forEach((docSnapshot) => {\r\n        categoriesData.push({\r\n          id: docSnapshot.id,\r\n          ...docSnapshot.data(),\r\n        });\r\n      });\r\n\r\n      setCategories(categoriesData);\r\n    };\r\n\r\n    fetchCategories();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      if (!selectedProduct || !selectedCollection) {\r\n        console.error('ID de producto o colección no válidos');\r\n        return;\r\n      }\r\n\r\n      const db = getFirestore(app);\r\n      const productRef = doc(db, selectedCollection, selectedProduct.id);\r\n\r\n      try {\r\n        const docSnapshot = await getDoc(productRef);\r\n\r\n        if (docSnapshot.exists()) {\r\n          const productData = docSnapshot.data();\r\n          setProductIncludesData(productData.includes || []);\r\n        } else {\r\n          console.error('El producto no existe en la base de datos.');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al obtener los includes del producto:', error);\r\n      }\r\n\r\n      // Obtener datos de la colección 'includes'\r\n      const includesCollectionRef = collection(db, 'includes'); // Reemplaza 'includes' con el nombre real de tu colección\r\n      const includesQuerySnapshot = await getDocs(includesCollectionRef);\r\n      const includesData = [];\r\n\r\n      includesQuerySnapshot.forEach((docSnapshot) => {\r\n        includesData.push({\r\n          id: docSnapshot.id,\r\n          ...docSnapshot.data(),\r\n        });\r\n      });\r\n\r\n      setIncludesData(includesData);\r\n    };\r\n\r\n    fetchData();\r\n  }, [selectedProduct, selectedCollection]);\r\n  useEffect(() => {\r\n    const fetchIncludes = async () => {\r\n      const db = getFirestore(app);\r\n      const includesCollection = collection(db, 'includes');\r\n      const querySnapshot = await getDocs(includesCollection);\r\n      const includesData = [];\r\n\r\n      querySnapshot.forEach((docSnapshot) => {\r\n        includesData.push({\r\n          id: docSnapshot.id,\r\n          ...docSnapshot.data(),\r\n        });\r\n      });\r\n\r\n      setAllIncludes(includesData);\r\n    };\r\n\r\n    fetchIncludes();\r\n  }, []);\r\n  useEffect(() => {\r\n    // Obtener las características destacadas específicas del producto seleccionado desde Firebase Firestore\r\n    const fetchFeaturedFeatures = async () => {\r\n      if (!selectedProduct || !selectedCollection) {\r\n        console.error('ID de producto o colección no válidos');\r\n        return;\r\n      }\r\n\r\n      const db = getFirestore(app);\r\n      const productRef = doc(db, selectedCollection, selectedProduct.id);\r\n\r\n      try {\r\n        const docSnapshot = await getDoc(productRef);\r\n\r\n        if (docSnapshot.exists()) {\r\n          const productData = docSnapshot.data();\r\n          setFeaturedFeatures(productData.featuredFeatures || []);\r\n        } else {\r\n          console.error('El producto no existe en la base de datos.');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al obtener las características destacadas del producto:', error);\r\n      }\r\n    };\r\n\r\n    fetchFeaturedFeatures();\r\n  }, [selectedProduct, selectedCollection]);\r\n  useEffect(() => {\r\n    // Obtener la lista de 'featuredFeatures' desde Firebase Firestore\r\n    const fetchFeaturedFeaturesList = async () => {\r\n      const db = getFirestore(app);\r\n      const featuredFeaturesListCollection = collection(db, 'featuredFeatures'); // Reemplaza 'featuredFeaturesList' con la colección real\r\n      const querySnapshot = await getDocs(featuredFeaturesListCollection);\r\n      const featuredFeaturesListData = [];\r\n\r\n      querySnapshot.forEach((docSnapshot) => {\r\n        featuredFeaturesListData.push({\r\n          id: docSnapshot.id,\r\n          ...docSnapshot.data(),\r\n        });\r\n      });\r\n\r\n      setAllFeaturedFeaturesList(featuredFeaturesListData);\r\n    };\r\n\r\n    fetchFeaturedFeaturesList();\r\n  }, []);\r\n\r\n  const handleFeatureDropdownChange = (e) => {\r\n    setSelectedFeatureToAdd(e.target.value);\r\n  };\r\n\r\n  const handleAddFeatureToProduct = async () => {\r\n    if (!selectedFeatureToAdd) {\r\n      console.error('Selecciona una característica destacada para agregar.');\r\n      return;\r\n    }\r\n\r\n    await addFeatureToProduct(selectedFeatureToAdd);\r\n    setSelectedFeatureToAdd('');\r\n  };\r\n\r\n  const addFeatureToProduct = async (featureId) => {\r\n    try {\r\n      // Verifica si featureId está definido\r\n      if (!featureId) {\r\n        console.error('El ID de la característica destacada no está definido.');\r\n        return;\r\n      }\r\n\r\n      // Realiza la lógica para agregar la característica destacada al producto\r\n      const db = getFirestore(app);\r\n      const productRef = doc(db, selectedCollection, selectedProduct.id);\r\n\r\n      // Obtén las características destacadas actuales del producto desde la base de datos\r\n      const docSnapshot = await getDoc(productRef);\r\n      const currentFeaturedFeatures = docSnapshot.data()?.featuredFeatures || [];\r\n\r\n      // Verifica si la característica ya está presente\r\n      const isFeatureAlreadySelected = currentFeaturedFeatures.some(\r\n        (feature) => feature.id === featureId\r\n      );\r\n\r\n      if (!isFeatureAlreadySelected) {\r\n        // Busca la característica en la lista de 'featuredFeaturesList'\r\n        const selectedFeature = allFeaturedFeaturesList.find((feature) => feature.id === featureId);\r\n\r\n        if (selectedFeature) {\r\n          const updatedFeaturedFeatures = [\r\n            ...currentFeaturedFeatures,\r\n            {\r\n              id: selectedFeature.id,\r\n              name: selectedFeature.name,\r\n              desc: selectedFeature.desc,\r\n              imageUrl: selectedFeature.imageUrl,\r\n            },\r\n          ];\r\n\r\n          // Actualiza la base de datos con las nuevas características destacadas\r\n          await updateDoc(productRef, {\r\n            featuredFeatures: updatedFeaturedFeatures,\r\n          });\r\n\r\n          console.log('Característica destacada agregada con éxito en la base de datos.');\r\n\r\n          // Actualiza el estado local para reflejar el cambio inmediatamente en la interfaz\r\n          setFeaturedFeatures(updatedFeaturedFeatures);\r\n        } else {\r\n          console.error('La característica destacada no se encontró en la lista.');\r\n        }\r\n      } else {\r\n        console.log('La característica destacada ya está presente en el producto.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al agregar la característica destacada en la base de datos:', error);\r\n    }\r\n  };\r\n\r\n\r\n  const getFeaturedFeaturesForProduct = async (productId) => {\r\n    const db = getFirestore(app);\r\n    const productRef = doc(db, selectedCollection, productId);\r\n\r\n    try {\r\n      const docSnapshot = await getDoc(productRef);\r\n\r\n      if (docSnapshot.exists()) {\r\n        const productData = docSnapshot.data();\r\n        setSelectedFeaturedFeatures(productData.featuredFeatures || []);\r\n      } else {\r\n        console.error('El producto no existe en la base de datos.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al obtener las características destacadas del producto:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Llama a la función para obtener las características destacadas cuando cambia el producto seleccionado\r\n    if (selectedProduct) {\r\n      getFeaturedFeaturesForProduct(selectedProduct.id);\r\n    }\r\n  }, [selectedProduct, selectedCollection]);\r\n\r\n\r\n  const handleSelectProduct = (product) => {\r\n    // Cuando el usuario selecciona un producto para editar, establece el producto seleccionado en el estado\r\n    setSelectedProduct(product);\r\n\r\n    // Establece las características destacadas del producto en el estado\r\n    setSelectedFeaturedFeatures(product.featuredFeatures || []);\r\n\r\n    getFeaturedFeaturesForProduct(product.id);\r\n\r\n    // Establece la primera categoría del producto en el estado de product\r\n    setProduct({\r\n      ...product,\r\n      categories: product.categories || '', // Valor por defecto de categories\r\n    });\r\n\r\n    const existingImages = product.imgs || [];\r\n    setSelectedProductImages(existingImages);\r\n  };\r\n\r\n  const handleFeatureChange = (e) => {\r\n    const { value, name } = e.target;\r\n\r\n    // Actualiza el estado editedFeatureValues con el nuevo valor editado\r\n    setEditedFeatureValues((prevValues) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }));\r\n\r\n    setSelectedFeatures((prevSelected) => {\r\n      if (prevSelected.some((feature) => feature.id === name)) {\r\n        // Si ya está seleccionada, actualiza su valor\r\n        const updatedSelected = prevSelected.map((feature) =>\r\n          feature.id === name ? { ...feature, value } : feature\r\n        );\r\n        updateFeaturesInDatabase(updatedSelected); // Actualiza la base de datos\r\n        return updatedSelected;\r\n      } else {\r\n        // Si no está seleccionada, agrégala\r\n        const updatedSelected = [...prevSelected, { id: name, value }];\r\n        updateFeaturesInDatabase(updatedSelected); // Actualiza la base de datos\r\n        return updatedSelected;\r\n      }\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      // ... Código existente\r\n      const db = getFirestore(app);\r\n      // Obtener las características destacadas desde Firebase Firestore\r\n      const featuredFeaturesCollectionRef = collection(db, 'featuredFeatures'); // Reemplaza 'featuredFeatures' con el nombre real de tu colección\r\n      const featuredFeaturesQuerySnapshot = await getDocs(featuredFeaturesCollectionRef);\r\n      const featuredFeaturesData = [];\r\n\r\n      featuredFeaturesQuerySnapshot.forEach((docSnapshot) => {\r\n        featuredFeaturesData.push({\r\n          id: docSnapshot.id,\r\n          ...docSnapshot.data(),\r\n        });\r\n      });\r\n\r\n      setSelectedFeaturedFeatures(featuredFeaturesData);\r\n    };\r\n\r\n    fetchData();\r\n  }, [selectedProduct, selectedCollection]);\r\n\r\n  const handleRemoveFeature = (featureId) => {\r\n    setSelectedFeatures((prevSelected) =>\r\n      prevSelected.filter((feature) => feature.id !== featureId)\r\n    );\r\n    updateFeaturesInDatabase(selectedFeatures.filter((feature) => feature.id !== featureId));\r\n  };\r\n  const updateFeaturesInDatabase = async (updatedFeatures) => {\r\n    const db = getFirestore();\r\n    const sku = selectedProduct.sku;\r\n\r\n    try {\r\n      const docRef = doc(db, selectedProduct.selectedCollection, sku);\r\n\r\n      // Obtén los features actuales del producto desde la base de datos\r\n      const docSnapshot = await getDoc(docRef);\r\n      const currentFeatures = docSnapshot.data()?.features || [];\r\n\r\n      // Actualiza los features con los nuevos valores editados\r\n      const updatedFeaturesWithValues = updatedFeatures.map((updatedFeature) => {\r\n        const currentFeature = currentFeatures.find((f) => f.id === updatedFeature.id);\r\n        return {\r\n          id: updatedFeature.id,\r\n          value: editedFeatureValues[updatedFeature.id] || currentFeature?.value || '',\r\n        };\r\n      });\r\n\r\n      // Actualiza la base de datos con los nuevos features\r\n      await updateDoc(docRef, {\r\n        features: updatedFeaturesWithValues,\r\n      });\r\n\r\n      console.log('Features actualizadas en la base de datos');\r\n    } catch (e) {\r\n      console.error('Error al actualizar features en la base de datos: ', e);\r\n    }\r\n  };\r\n\r\n  const handleRemoveInclude = async (includeId) => {\r\n    try {\r\n      // Realiza la lógica para eliminar el include del producto\r\n      const updatedIncludes = productIncludesData.filter((id) => id !== includeId);\r\n\r\n      // Actualiza la base de datos\r\n      const db = getFirestore(app);\r\n      const productRef = doc(db, selectedCollection, selectedProduct.id);\r\n\r\n      await updateDoc(productRef, {\r\n        includes: updatedIncludes,\r\n      });\r\n\r\n      console.log('Include eliminado con éxito');\r\n\r\n      // Actualiza el estado local para reflejar el cambio inmediatamente en la interfaz\r\n      setProductIncludesData(updatedIncludes);\r\n    } catch (error) {\r\n      console.error('Error al eliminar el include:', error);\r\n    }\r\n  };\r\n\r\n  const saveEditedFeatures = () => {\r\n    // Llama a la función de actualización de la base de datos con las características editadas\r\n    updateFeaturesInDatabase(selectedFeatures);\r\n  };\r\n  useEffect(() => {\r\n    // Filtra las categorías de segundo nivel basándose en el parent de la primera categoría seleccionada\r\n    const filteredSecondCategories = lvTwoCat.filter((category) => category.parent === Number(product.categories));\r\n    setSecondCategories(filteredSecondCategories);\r\n  }, [product.categories]);\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    // Actualiza la categoría en el estado local\r\n    setProduct({\r\n      ...product,\r\n      [name]: value,\r\n    });\r\n\r\n    // Actualiza la categoría en la base de datos\r\n    const db = getFirestore(app);\r\n    const productRef = doc(db, selectedCollection, selectedProduct.id);\r\n\r\n    try {\r\n      // Actualiza la categoría en Firestore\r\n      updateDoc(productRef, {\r\n        categories: product.categories,\r\n        secondCategory: product.secondCategory,\r\n      });\r\n\r\n      console.log(`Categoría actualizada en la base de datos: ${product.categories}, ${product.secondCategory}`);\r\n    } catch (error) {\r\n      console.error('Error al actualizar la categoría en la base de datos:', error);\r\n    }\r\n  };\r\n  const handleUpdateProduct = async () => {\r\n    console.log('Botón \"Guardar Cambios\" presionado');\r\n    console.log('Valores del producto y las imágenes en el estado:', product, uniqueUpdatedImages);\r\n    if (!selectedCollection || !selectedProduct) {\r\n      console.error('Selecciona una colección y un producto válidos para editar');\r\n      return;\r\n    }\r\n\r\n    console.log('Valores del producto y las imágenes en el estado:', product, uniqueUpdatedImages);\r\n\r\n    const db = getFirestore(app);\r\n    const productRef = doc(db, selectedCollection, selectedProduct.id);\r\n\r\n    // Asegúrate de que secondCategory tenga un valor definido\r\n    const updatedProductData = {\r\n      name: selectedProduct.name,\r\n      longDesc: selectedProduct.longDesc,\r\n      shortDesc: selectedProduct.shortDesc,\r\n      categories: product.categories,\r\n      secondCategory: product.secondCategory || null, // Usa null si secondCategory es undefined\r\n      gen: product.gen,\r\n      published: isPublished,\r\n      // ...otros campos actualizados\r\n    };\r\n\r\n    // Si hay imágenes existentes, inclúyelas en los datos actualizados\r\n    if (selectedProduct.imgs && selectedProduct.imgs.length > 0) {\r\n      updatedProductData.imgs = selectedProduct.imgs;\r\n    }\r\n\r\n    try {\r\n      // Actualiza la información del producto\r\n      await updateDoc(productRef, updatedProductData);\r\n\r\n      console.log('Documento del producto actualizado con éxito.');\r\n\r\n      // ... Resto del código\r\n    } catch (error) {\r\n      console.error('Error al actualizar el documento del producto:', error);\r\n    }\r\n\r\n    if (!selectedCollection || !selectedProduct) {\r\n      console.error('Selecciona una colección, un producto válido y al menos una nueva imagen para actualizar');\r\n      return;\r\n    }\r\n\r\n\r\n\r\n    try {\r\n      // Obtén las imágenes existentes desde Firebase Firestore\r\n      const docSnapshot = await getDoc(productRef);\r\n      const existingImages = docSnapshot.data().imgs || [];\r\n\r\n      // Combina las imágenes existentes con las nuevas imágenes\r\n      const updatedImages = [...existingImages, ...newProductImages];\r\n\r\n      // Elimina las imágenes de la lista `deletedImages` de las imágenes actualizadas\r\n      const imagesToRemove = deletedImages.map((deletedImage) => deletedImage);\r\n\r\n      const updatedImagesWithoutDeleted = updatedImages.filter((image) => !imagesToRemove.includes(image));\r\n\r\n      // Actualiza el campo 'imgs' en Firebase Firestore con las imágenes actualizadas\r\n      await updateDoc(productRef, {\r\n        imgs: updatedImagesWithoutDeleted,\r\n      });\r\n\r\n      console.log('Imágenes actualizadas con éxito.');\r\n\r\n      // Actualiza el estado de uniqueUpdatedImages\r\n      setUniqueUpdatedImages(updatedImagesWithoutDeleted);\r\n\r\n      // Habilita el botón \"Guardar Cambios\" después de actualizar las imágenes\r\n      setAreNewImagesUploaded(true);\r\n\r\n      // Marca que se ha hecho clic en \"Guardar Nuevas Imágenes\"\r\n      setIsUpdateImagesClicked(true);\r\n\r\n      // Limpia la lista de imágenes eliminadas\r\n      setDeletedImages([]);\r\n    } catch (error) {\r\n      console.error('Error al actualizar las imágenes:', error);\r\n    }\r\n  };\r\n  const handleNewImageUpload = async (e) => {\r\n    const { files } = e.target;\r\n    const previews = [];\r\n\r\n    if (files.length > 0) {\r\n      const existingImageNames = selectedProductImages.map((imageUrl) => {\r\n        const urlParts = imageUrl.split('/');\r\n        return urlParts[urlParts.length - 1]; // Obtiene el nombre del archivo de la URL\r\n      });\r\n\r\n      const newImages = [];\r\n      for (let i = 0; i < files.length; i++) {\r\n        const file = files[i];\r\n        const fileName = file.name;\r\n\r\n        if (!existingImageNames.includes(fileName)) {\r\n          newImages.push(file);\r\n        } else {\r\n          // Aquí puedes mostrar una alerta o notificación de que el nombre de la imagen ya existe\r\n          console.log(`La imagen con el nombre ${fileName} ya existe en la base de datos.`);\r\n        }\r\n      }\r\n\r\n      const newImageUrls = await uploadImagesToFirebase(newImages);\r\n\r\n      if (newImageUrls.length > 0) {\r\n        // Habilitar el botón \"Guardar Cambios\" solo si se cargaron nuevas imágenes únicas\r\n        setAreNewImagesUploaded(true);\r\n      }\r\n\r\n      // Agregar las nuevas URLs de imágenes únicas a la lista de imágenes nuevas\r\n      setNewProductImages([...newProductImages, ...newImageUrls]);\r\n    }\r\n  };\r\n  const uploadImagesToFirebase = async (imageFiles) => {\r\n    const storageRef = ref(storage, '/images');\r\n    const newImageUrls = [];\r\n\r\n    for (let i = 0; i < imageFiles.length; i++) {\r\n      const file = imageFiles[i];\r\n\r\n      // Genera un nombre único para la imagen\r\n      const uniqueName = uuidv4() + '_' + file.name;\r\n\r\n      // Crea una referencia al almacenamiento con el nombre único\r\n      const imageRef = ref(storageRef, uniqueName);\r\n\r\n      try {\r\n        // Cargar la imagen al almacenamiento de Firebase\r\n        await uploadBytes(imageRef, file);\r\n\r\n        // Obtener la URL de descarga de la imagen\r\n        const imageUrl = await getDownloadURL(imageRef);\r\n\r\n        newImageUrls.push(imageUrl);\r\n      } catch (error) {\r\n        console.error('Error al cargar la imagen: ', error);\r\n      }\r\n    }\r\n\r\n    return newImageUrls;\r\n  };\r\n  const handleDeleteImage = (index) => {\r\n    const updatedImages = [...selectedProductImages];\r\n    const deletedImage = updatedImages.splice(index, 1)[0];\r\n    setSelectedProductImages(updatedImages);\r\n\r\n    // Agregar la imagen eliminada a la lista de imágenes eliminadas\r\n    setDeletedImages([...deletedImages, deletedImage]);\r\n  };\r\n  const handleAddBanner = async () => {\r\n    console.log('Botón \"Guardar modificaciones\" presionado');\r\n    if (!selectedCollection || !selectedProduct || !newBanner.title || !newBanner.img || !newBanner.desc) {\r\n      console.error('Completa todos los campos para agregar un nuevo banner');\r\n      return;\r\n    }\r\n\r\n    // Verifica que newBanner.img contiene la URL de la imagen antes de almacenarlo en Firestore\r\n    if (typeof newBanner.img !== 'string') {\r\n      console.error('El campo img debe contener la URL de la imagen');\r\n      return;\r\n    }\r\n\r\n    // Crea una copia del producto para evitar mutar el estado directamente\r\n    const updatedProduct = { ...selectedProduct };\r\n\r\n    // Agrega el nuevo banner a la lista de banners del producto\r\n    updatedProduct.banners.push({ ...newBanner });\r\n\r\n    // Restablece el estado de newBanner después de agregar el nuevo banner\r\n    setNewBanner({\r\n      title: '',\r\n      img: '',\r\n      desc: '',\r\n    });\r\n    // Mostrar la alerta de banner agregado\r\n    setShowBannerAddedAlert(true);\r\n\r\n    // Ocultar la alerta después de unos segundos (opcional)\r\n    setTimeout(() => {\r\n      setShowBannerAddedAlert(false);\r\n    }, 3000); // Cambia la duración deseada en milisegundos\r\n\r\n    // Actualiza el estado del producto después de agregar el nuevo banner\r\n    setSelectedProduct(updatedProduct);\r\n\r\n    // Actualiza el campo 'banners' en Firestore con los banners actualizados\r\n    const db = getFirestore(app);\r\n    const productRef = doc(db, selectedCollection, selectedProduct.id);\r\n\r\n    try {\r\n      await updateDoc(productRef, {\r\n        banners: updatedProduct.banners,\r\n      });\r\n\r\n      console.log('Nuevo banner agregado con éxito.');\r\n    } catch (error) {\r\n      console.error('Error al agregar el nuevo banner en Firestore:', error);\r\n    }\r\n  };\r\n  const handleSelectBanner = (index) => {\r\n    if (!selectedProduct.banners || selectedProduct.banners.length === 0) {\r\n      return;\r\n    }\r\n\r\n    // Asegúrate de que index esté dentro de los límites\r\n    index = Math.max(0, Math.min(index, selectedProduct.banners.length - 1));\r\n\r\n    // Selecciona el banner según el índice\r\n    const selectedBanner = selectedProduct.banners[index];\r\n\r\n    // Actualiza el estado de editedBanner con los detalles del banner seleccionado\r\n    setEditedBanner({\r\n      title: selectedBanner?.title || '',\r\n      img: selectedBanner?.img || '',\r\n      desc: selectedBanner?.desc || '',\r\n    });\r\n\r\n    // Actualiza el estado local del índice del banner seleccionado\r\n    setSelectedBannerIndex(index);\r\n  };\r\n  const handleNewBannerImageUpload = (e) => {\r\n    const file = e.target.files[0];\r\n    const imageUrl = URL.createObjectURL(file);\r\n    setNewBanner({ ...newBanner, img: imageUrl });\r\n  };\r\n  const storage = getStorage(app);\r\n  const handleEditedBannerImageUpload = async (e) => {\r\n    const file = e.target.files[0];\r\n    //const { files } = e.target;\r\n    const previews = [];\r\n\r\n    if (file) {\r\n      try {\r\n        // Genera un nombre único para la imagen\r\n        const uniqueName = uuidv4() + '_' + file.name;\r\n\r\n        // Crea una referencia al almacenamiento con el nombre único\r\n        const storageRef = ref(storage, `bannerImages/${uniqueName}`);\r\n\r\n        // Sube la imagen al almacenamiento\r\n        await uploadBytes(storageRef, file);\r\n\r\n        // Obtén la URL de descarga de la imagen\r\n        const downloadURL = await getDownloadURL(storageRef);\r\n\r\n        // Actualiza el estado con la información de la imagen\r\n        setEditedBanner({\r\n          ...editedBanner,\r\n          img: downloadURL,\r\n          // Puedes almacenar el nombre único si es necesario\r\n          // uniqueName: uniqueName,\r\n        });\r\n      } catch (error) {\r\n        console.error('Error al cargar la imagen:', error);\r\n      }\r\n    }\r\n  };\r\n  const handleEditBanner = async () => {\r\n    if (!selectedCollection || !selectedProduct || selectedBannerIndex === null) {\r\n      console.error('Selecciona una colección, un producto válido y un banner válido para editar');\r\n      return;\r\n    }\r\n\r\n    // Crea una copia del producto para evitar mutar el estado directamente\r\n    const updatedProduct = { ...selectedProduct };\r\n\r\n    // Encuentra el banner seleccionado en la lista de banners del producto\r\n    const editedBannerIndex = selectedBannerIndex;\r\n\r\n    if (editedBannerIndex !== null) {\r\n      // Actualiza el banner en la lista de banners del producto con las ediciones\r\n      updatedProduct.banners[editedBannerIndex] = { ...editedBanner };\r\n\r\n      // Restablece el estado de editedBanner después de aplicar las ediciones\r\n      setEditedBanner({\r\n        title: '',\r\n        img: '',\r\n        desc: '',\r\n      });\r\n\r\n      // Mostrar la alerta de banner editado\r\n      setShowBannerEditedAlert(true);\r\n\r\n      // Ocultar la alerta después de unos segundos (opcional)\r\n      setTimeout(() => {\r\n        setShowBannerEditedAlert(false);\r\n      }, 3000); // Cambia la duración deseada en milisegundos\r\n\r\n      // Actualiza el estado del producto después de editar el banner\r\n      setSelectedProduct(updatedProduct);\r\n    }\r\n\r\n    // Actualiza el campo 'banners' en Firestore con los banners actualizados\r\n    const db = getFirestore(app);\r\n    const productRef = doc(db, selectedCollection, selectedProduct.id);\r\n\r\n    try {\r\n      await updateDoc(productRef, {\r\n        banners: updatedProduct.banners,\r\n      });\r\n\r\n      console.log('Banner editado con éxito.');\r\n    } catch (error) {\r\n      console.error('Error al editar el banner en Firestore:', error);\r\n    }\r\n  };\r\n  const handleDeleteBanner = async (bannerIndex) => {\r\n    if (!selectedCollection || !selectedProduct || bannerIndex === undefined) {\r\n      console.error('Selecciona una colección, un producto válido y un banner válido para eliminar');\r\n      return;\r\n    }\r\n\r\n    // Elimina el banner seleccionado de la lista de banners del producto\r\n    const updatedBanners = [...product.banners];\r\n    const deletedBanner = updatedBanners.splice(bannerIndex, 1)[0];\r\n\r\n    // Actualiza el campo 'banners' en Firebase Firestore con los banners actualizados\r\n    const db = getFirestore(app);\r\n    const productRef = doc(db, selectedCollection, selectedProduct.id);\r\n\r\n    try {\r\n      await updateDoc(productRef, {\r\n        banners: updatedBanners,\r\n      });\r\n\r\n      // Elimina la imagen del banner del almacenamiento de Firebase\r\n      if (deletedBanner.img) {\r\n        const storageRef = ref(storage, 'bannerImages/'); // Asegúrate de usar la instancia correcta de Firebase Storage\r\n\r\n        try {\r\n          const imageRef = ref(storageRef, deletedBanner.img);\r\n          await deleteObject(imageRef);\r\n        } catch (storageError) {\r\n          console.error('Error al eliminar la imagen del banner:', storageError);\r\n        }\r\n      }\r\n\r\n      console.log('Banner eliminado con éxito.');\r\n\r\n      // Actualiza el estado del producto después de la eliminación del banner\r\n      setProduct({\r\n        ...product,\r\n        banners: updatedBanners,\r\n      });\r\n    } catch (error) {\r\n      console.error('Error al eliminar el banner en Firestore:', error);\r\n    }\r\n  };\r\n  const handleToggleNewBannerForm = () => {\r\n    console.log('Botón \"Guardar modificaciones\" presionado');\r\n    console.log('Valores en newBanner:', newBanner);\r\n    setShowNewBannerForm(!showNewBannerForm);\r\n  };\r\n  const handleBack = () => {\r\n    router.push('/admin');\r\n  };\r\n\r\n  if (!currentUser) {\r\n    return <Admin />;\r\n  }\r\n\r\n  return (\r\n\r\n    <div className=\"mt-4 p-5 bg-primary text-white rounded center\">\r\n      <div className=\"app-container\" >\r\n        <div className=\"sidebarEdit\">\r\n          <div className=\"sidebar-header\">\r\n          </div>\r\n          <ul className=\"sidebar-list\">\r\n            <li className=\"sidebar-list-item\">\r\n              <h2 className=\"app-content-headerText\">Selecciona una colección</h2>\r\n\r\n              <div class=\"containerSelect\">\r\n                <div class=\"select\">\r\n                  <select\r\n                    value={selectedCollection}\r\n                    onChange={(e) => setSelectedCollection(e.target.value)}\r\n                  >\r\n                    <option value=\"\">Selecciona una colección</option>\r\n                    <option value=\"headsets\">Headsets</option>\r\n                    <option value=\"audio\">Audio</option>\r\n                    <option value=\"tablets\">Tablets</option>\r\n                    <option value=\"notebooks\">Notebooks</option>\r\n                    <option value=\"cooks\">Cooks</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li className=\"sidebar-list-item\">\r\n              <Form>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Control\r\n                    className='form-title'\r\n                    style={{ color: 'black' }}\r\n                    type=\"text\"\r\n                    placeholder=\"Buscar por Nombre o SKU\"\r\n                    value={searchTerm}\r\n                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                  />\r\n                </Form.Group>\r\n              </Form>\r\n\r\n            </li>\r\n          </ul>\r\n          <ul className=\"sidebar-list\">\r\n            <hr></hr>\r\n\r\n\r\n            {filteredProducts.map((product) => (\r\n              <li key={product.id}>\r\n                <hr></hr>\r\n                <div className=\"sidebar-list-itemEdit\">\r\n                  {product.imgs.length > 0 && (\r\n                    <img\r\n                      src={product.imgs[0]} // Supongo que product.images es un arreglo de URLs de imágenes del producto\r\n                      alt={`Imagen de ${product.name}`}\r\n                      className=\"image-previewsEdit\"\r\n                    />\r\n                  )}\r\n                  <span className='form-titleEdit'>{product.sku}</span>\r\n                  <button className=\"app-content-headerButtonEdit\" onClick={() => handleSelectProduct(product)}>Editar</button>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n\r\n          <div className=\"account-info\">\r\n            <div className=\"account-info-picture\">\r\n\r\n            </div>\r\n\r\n            <div className=\"account-info-name\">\r\n              User\r\n              <h4>\r\n                {currentUser\r\n                  ? currentUser.email.split('@')[0] // Obtiene la parte antes del '@'\r\n                  : 'Not logged in'}\r\n              </h4>\r\n            </div>\r\n            <button className=\"account-info-more\">\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-more-horizontal\"><circle cx=\"12\" cy=\"12\" r=\"1\" /><circle cx=\"19\" cy=\"12\" r=\"1\" /><circle cx=\"5\" cy=\"12\" r=\"1\" /></svg>\r\n            </button>\r\n\r\n          </div>\r\n        </div>\r\n        <div className=\"app-contentEdit\">\r\n          <div className=\"app-content-header\">\r\n\r\n            <h1 className=\"app-content-headerText\">Editar producto</h1>\r\n\r\n            <button onClick={handleBack} variant=\"danger\" className=\"app-content-headerButton\">Volver</button>\r\n          </div>\r\n          <div className=\"app-content-actions\">\r\n            {isProductPublished ? (\r\n              // Mostrar el contenido del formulario si el producto está publicado\r\n              <div className=\"app-contentEdit\">\r\n                {/* ... tu código existente */}\r\n              </div>\r\n            ) : (\r\n              // Mostrar la alerta si el producto no está publicado\r\n              <div className=\"app-content-headerText\" style={{ backgroundColor: '#ff000070', textDecoration: 'none' }} role=\"alert\">\r\n                PRODUCTO NO PUBLICADO. Por favor, actualiza el estado de publicación del producto.\r\n              </div>\r\n            )}\r\n\r\n            {selectedProduct && (\r\n              <div>\r\n                <Form.Group controlId=\"published\" className=\"nice-form-group\">\r\n                  <p style={{ textDecoration: 'none', fontSize: '40px', fontWeight: 'bold' }}\r\n                    className=\"app-content-headerText\">{selectedProduct.sku}</p>\r\n                  <hr style={{ marginTop: '20px' }} />\r\n                  <Form.Check\r\n                    style={{ textDecoration: 'none', marginTop: '20px' }}\r\n                    className=\"app-content-headerText\"\r\n                    type=\"switch\"\r\n                    id=\"published-switch\"\r\n                    label={`Publicado: ${isPublished ? 'Sí' : 'No'}`}\r\n                    checked={isPublished}\r\n                    onChange={handleTogglePublished}\r\n                  />\r\n                </Form.Group>\r\n                <Form>\r\n                  <Form.Group className=\"nice-form-group\">\r\n                    <Form.Label>\r\n                      Nombre: </Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      value={selectedProduct.name}\r\n                      onChange={(e) =>\r\n                        setSelectedProduct({\r\n                          ...selectedProduct,\r\n                          name: e.target.value,\r\n                        })\r\n                      }\r\n                    >\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                </Form>\r\n\r\n                <Form>\r\n                  <Form.Group className=\"nice-form-group\">\r\n                    <Form.Label>\r\n                      Descripción Larga:\r\n                    </Form.Label>\r\n                    <textarea\r\n                      value={selectedProduct.longDesc}\r\n                      onChange={(e) =>\r\n                        setSelectedProduct({\r\n                          ...selectedProduct,\r\n                          longDesc: e.target.value,\r\n                        })\r\n                      }\r\n                    />\r\n                  </Form.Group>\r\n                </Form>\r\n\r\n                <Form>\r\n                  <Form.Group className=\"nice-form-group\">\r\n                    <Form.Label>Descripción Corta:</Form.Label>\r\n                    <textarea\r\n                      value={selectedProduct.shortDesc}\r\n                      onChange={(e) =>\r\n                        setSelectedProduct({\r\n                          ...selectedProduct,\r\n                          shortDesc: e.target.value,\r\n                        })\r\n                      }\r\n                    />\r\n                  </Form.Group>\r\n                </Form>\r\n\r\n                <Form.Group controlId=\"gen\" className='nice-form-group'>\r\n                  <Form.Label className='form-title'>Generación del producto</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"gen\"\r\n                    value={product.gen}\r\n                    onChange={handleChange} // Verifica que handleChange esté manejando los cambios correctamente\r\n                    required\r\n                  />\r\n                </Form.Group>\r\n\r\n                {selectedProductImages.length > 0 ? (\r\n                  <div className=\"nice-form-group\">\r\n                    <hr style={{ marginTop: '20px' }} />\r\n                    <h3 className=\"app-content-headerText\" style={{ marginTop: '20px', textDecoration: '1px underline' }}>Imágenes existentes</h3>\r\n                    <ul className='image-container-editImage'>\r\n                      {selectedProductImages.map((imageUrl, index) => (\r\n                        <li key={index}>\r\n                          <img className=\"image-previewsEdits\" src={imageUrl} alt={`Imagen ${index}`} />\r\n                          <button className=\"app-content-headerButton\" onClick={() => handleDeleteImage(index)}>\r\n                            Eliminar\r\n                          </button>\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </div>\r\n                ) : (\r\n                  <p className='form-titleEdit'>No hay imágenes cargadas</p>\r\n                )}\r\n\r\n                {newProductImages.length > 0 && (\r\n                  <div>\r\n                    <h3 className=\"app-content-headerText\">Nuevas imágenes cargadas</h3>\r\n                    <ul className='image-container-edit'>\r\n                      {newProductImages.map((imageUrl, index) => (\r\n                        <li key={index}>\r\n                          <img className=\"image-previews\" src={imageUrl} alt={`Nueva Imagen ${index}`} />\r\n                          <button className=\"app-content-headerButton\" onClick={() => handleDeleteImage(index)}>\r\n                            Eliminar\r\n                          </button>\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                    {/* <button className=\"app-content-headerButton\" onClick={handleUpdateImages} variant=\"primary\">\r\n                      Guardar Nuevas Imágenes\r\n                    </button> */}\r\n                  </div>\r\n                )}\r\n                <Form.Group controlId=\"newImages\" className='nice-form-group'>\r\n                  <Form.Label >Cargar nuevas imágenes</Form.Label>\r\n                  <Form.Control\r\n                    className='form-title'\r\n                    type=\"file\"\r\n                    name=\"newImages\"\r\n                    onChange={handleNewImageUpload}\r\n                    multiple\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form>\r\n                  <div>\r\n                    <hr style={{ marginTop: '20px' }} />\r\n                    <h2 className=\"app-content-headerText\" style={{ marginTop: '20px', textDecoration: '1px underline' }}>Banners existentes</h2>\r\n\r\n\r\n                    <Form.Group controlId=\"selectBanner\" className='nice-form-group'>\r\n                      <Form.Label>Selecciona un Banner para Editar</Form.Label>\r\n                      <Form.Control\r\n                        as=\"select\"\r\n                        name=\"selectBanner\"\r\n                        value={selectedBannerIndex !== null ? selectedBannerIndex.toString() : ''}\r\n                        onChange={(e) => handleSelectBanner(parseInt(e.target.value))}\r\n                      >\r\n\r\n                        <option value=\"\">Selecciona un Banner</option>\r\n                        {selectedProduct.banners && selectedProduct.banners.map((banner, index) => (\r\n                          <option key={index} value={index.toString()}>\r\n                            {banner.title}\r\n                          </option>\r\n                        ))}\r\n                      </Form.Control>\r\n                      <Form.Group controlId=\"bannerTitle\" className='nice-form-group'>\r\n                        <Form.Label >Título del Banner</Form.Label>\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          name=\"bannerTitle\"\r\n                          value={editedBanner.title}\r\n                          onChange={(e) => setEditedBanner({ ...editedBanner, title: e.target.value })}\r\n                        />\r\n                      </Form.Group>\r\n\r\n                      <Form.Group controlId=\"bannerImage\" className='nice-form-group'>\r\n                        <Form.Label>Imagen del Banner</Form.Label>\r\n                        <Form.Control\r\n                          className='form-title'\r\n                          type=\"file\"\r\n                          name=\"bannerImage\"\r\n                          onChange={handleEditedBannerImageUpload}\r\n                          accept=\"image/*\" // Esto permite solo archivos de imagen\r\n                        />\r\n                      </Form.Group>\r\n\r\n\r\n                      {editedBanner.img && (\r\n                        <div className=\"banner-image-preview\">\r\n                          <img className=\"image-previews-banner\" src={editedBanner.img} alt=\"image-banner\" />\r\n                        </div>\r\n                      )}\r\n\r\n                      <Form.Group controlId=\"bannerDesc\" className='nice-form-group'>\r\n                        <Form.Label>Descripción del Banner</Form.Label>\r\n                        <Form.Control\r\n                          as=\"textarea\"\r\n                          name=\"bannerDesc\"\r\n                          value={editedBanner.desc}\r\n                          onChange={(e) => setEditedBanner({ ...editedBanner, desc: e.target.value })}\r\n                        />\r\n                      </Form.Group>\r\n\r\n\r\n                      <Button variant=\"danger\" className=\"app-content-headerButton\" onClick={handleEditBanner}>\r\n                        Editar Banner\r\n                      </Button>\r\n                    </Form.Group>\r\n                    {selectedProduct.banners && selectedProduct.banners.length > 0 ? (\r\n                      <ul className='image-container-edit'>\r\n                        {selectedProduct.banners.map((banner, index) => (\r\n                          <li key={index}>\r\n                            <p className=\"app-content-headerText\" style={{ textDecoration: '1px underline' }}>Titulo del Banner </p>\r\n                            <p className=\"app-content-bannerDesc\">{banner.title}</p>\r\n                            <img className=\"image-previews-banner\" src={banner.img} alt={banner.title} />\r\n                            <p className=\"app-content-bannerDescT\">Descripción del Banner:</p>\r\n                            <p className=\"app-content-bannerDesc\">{banner.desc}</p>\r\n                            <Button\r\n                              variant=\"danger\"\r\n                              className=\"app-content-headerButton\"\r\n                              onClick={() => handleDeleteBanner(index)}\r\n                            >\r\n                              Eliminar Banner\r\n                            </Button>\r\n                          </li>\r\n                        ))}\r\n                      </ul>\r\n                    ) : (\r\n                      <p className=\"app-content-headerText\">No hay banners existentes.</p>\r\n                    )}\r\n                  </div>\r\n\r\n\r\n                  <div>\r\n                    <button\r\n                      type=\"button\"  // Agrega esta línea para especificar que el botón no es de tipo \"submit\"\r\n                      className=\"app-content-headerButton\"\r\n                      onClick={handleToggleNewBannerForm}\r\n                    >\r\n                      {showNewBannerForm ? 'Ocultar Nuevo Banner' : 'Añadir Nuevo Banner'}\r\n                    </button>\r\n                    {showNewBannerForm && (\r\n                      <div>\r\n                        <Form.Group controlId=\"newBannerTitle\" className='nice-form-group'>\r\n                          <Form.Label>Título del Nuevo Banner</Form.Label>\r\n                          <Form.Control\r\n                            type=\"text\"\r\n                            name=\"newBannerTitle\"\r\n                            value={newBanner.title}\r\n                            onChange={(e) => setNewBanner({ ...newBanner, title: e.target.value })}\r\n                          />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"newBannerImage\" className='nice-form-group'>\r\n                          <Form.Label>Imagen del Nuevo Banner</Form.Label>\r\n                          <Form.Control\r\n                            className='form-title'\r\n                            type=\"file\"\r\n                            name=\"newBannerImage\"\r\n                            onChange={(e) => handleNewBannerImageUpload(e)}\r\n                            accept=\"image/*\"\r\n                          />\r\n                        </Form.Group>\r\n\r\n                        {newBanner.img && (\r\n                          <div className=\"banner-image-preview\">\r\n                            <img className=\"image-previews-banner\" src={newBanner.img} alt=\"image-banner\" />\r\n                          </div>\r\n                        )}\r\n\r\n                        <Form.Group controlId=\"newBannerDesc\" className='nice-form-group'>\r\n                          <Form.Label>Descripción del Nuevo Banner</Form.Label>\r\n                          <Form.Control\r\n                            as=\"textarea\"\r\n                            name=\"newBannerDesc\"\r\n                            value={newBanner.desc}\r\n                            onChange={(e) => setNewBanner({ ...newBanner, desc: e.target.value })}\r\n                          />\r\n                        </Form.Group>\r\n                      </div>\r\n                    )}\r\n\r\n                  </div>\r\n\r\n\r\n                  <Button variant=\"primary\"\r\n                    style={{ marginTop: '10px' }} className=\"app-content-headerButton\" onClick={handleAddBanner}>\r\n                    Guardar modificacines\r\n                  </Button>\r\n\r\n\r\n\r\n\r\n                </Form>\r\n\r\n\r\n                <hr style={{ marginTop: '20px', marginBottom: '20px' }} />\r\n\r\n\r\n\r\n                <h2 className=\"app-content-headerText\" style={{ marginTop: '20px', textDecoration: '1px underline' }}>Caracteristicas Destacadas</h2>\r\n\r\n                <Form.Group controlId=\"featuredFeature\" className=\"nice-form-group\" >\r\n                  <Form.Label>Seleccionar Característica Destacada:</Form.Label>\r\n                  <Form.Select\r\n                    value={selectedFeatureToAdd}\r\n                    onChange={handleFeatureDropdownChange}\r\n                  >\r\n                    <option value=\"\" disabled>Seleccionar...</option>\r\n                    {allFeaturedFeaturesList.map((feature) => (\r\n                      <option key={feature.id} value={feature.id}>\r\n                        {feature.name}\r\n                      </option>\r\n                    ))}\r\n                  </Form.Select>\r\n                </Form.Group>\r\n                <button className=\"app-content-headerButton\" variant=\"primary\" onClick={handleAddFeatureToProduct}>\r\n                  Agregar Característica\r\n                </button>\r\n\r\n                <Form.Group controlId=\"featuredFeature\" className=\"nice-form-group\">\r\n                  {featuredFeatures.map((feature) => (\r\n                    <div className=\"featuredFeaturesSelected\" key={feature.id}>\r\n\r\n                      <div style={{ display: 'flex' }}>\r\n                        <li>\r\n                          <button\r\n                            variant=\"danger\"\r\n                            className=\"app-content-headerButton\"\r\n                            type=\"button\"\r\n                            onClick={() => handleRemoveFeature(feature.id)}\r\n                          >\r\n                            <CloseIcon fontSize=\"\" />\r\n                          </button>\r\n                          {feature.imageUrl && (\r\n                            <div>\r\n                              <p>Imagen:</p>\r\n                              <img\r\n                                src={feature.imageUrl}\r\n                                alt={`Imagen de ${feature.name}`}\r\n                                style={{ width: '77px', height: '77px', borderRadius: '10px', backgroundColor: 'aqua' }}\r\n                              />\r\n                            </div>\r\n                          )}\r\n\r\n                          <p>{`ID: ${feature.id}`}</p>\r\n                          <p>{`Nombre: ${feature.name}`}</p>\r\n                          <p>{`Descripción: ${feature.desc}`}</p>\r\n\r\n                        </li>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </Form.Group>\r\n\r\n                <hr style={{ marginTop: '20px' }} />\r\n                <h2 className=\"app-content-headerText\" style={{ marginTop: '20px', textDecoration: '1px underline' }}>Caracteristicas</h2>\r\n\r\n                <Form.Group controlId=\"productFeatures\">\r\n                  <Form.Group className='checkForm' controlId=\"features\">\r\n                    <Form.Label>Selecciona las características:</Form.Label>\r\n                    {allFeatures.map((feature) => (\r\n                      <Form.Check\r\n                        key={feature.id}\r\n                        type=\"checkbox\"\r\n                        label={`${feature.id} - ${feature.name}`}\r\n                        name={feature.id}\r\n                        value={selectedFeatures.find((selectedFeature) => selectedFeature.id === feature.id)?.value || ''}\r\n                        onChange={handleFeatureChange}\r\n                      />\r\n                    ))}\r\n\r\n                  </Form.Group>\r\n\r\n                  <div className=\"featuresSelectedFather\" >\r\n                    {selectedFeatures.map((selectedFeature) => (\r\n\r\n                      <div key={selectedFeature.id} className=\"featuresSelected\" style={{ color: 'black' }}>\r\n                        <button\r\n                          variant=\"danger\"\r\n                          className=\"app-content-headerButton\"\r\n                          type=\"button\"\r\n                          onClick={() => handleRemoveFeature(selectedFeature.id)}\r\n                        >\r\n                          <CloseIcon fontSize=\"\" />\r\n                        </button>\r\n                        <Form.Group controlId=\"name\" className='nice-form-group' style={{ borderBottom: 'white solid 1px', display: 'flex', alignItems: 'center' }}>\r\n                          <Form.Label className='form-title-features'>{`${selectedFeature.id} - `}</Form.Label>\r\n                          <Form.Control\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            value={editedFeatureValues[selectedFeature.id] || selectedFeature.value}\r\n                            onChange={(e) => {\r\n                              const value = e.target.value;\r\n                              setEditedFeatureValues((prev) => ({\r\n                                ...prev,\r\n                                [selectedFeature.id]: value,\r\n                              }));\r\n                            }}\r\n                            required\r\n                          />\r\n\r\n\r\n                        </Form.Group>\r\n\r\n                      </div>\r\n\r\n                    ))}\r\n                  </div>\r\n                  <button style={{ marginTop: '10px' }} className=\"app-content-headerButton\" onClick={saveEditedFeatures}>\r\n                    Guardar Características\r\n                  </button>\r\n                </Form.Group>\r\n\r\n                <hr style={{ marginTop: '20px' }} />\r\n\r\n                <Form.Group controlId=\"includes\" className='nice-form-group'>\r\n                  <h2 className=\"app-content-headerText\" style={{ marginTop: '20px', textDecoration: '1px underline' }}>Incluye:</h2>\r\n                  <Form.Group controlId=\"selectInclude\" className='nice-form-group'>\r\n                    <Form.Label>Seleccionar Include:</Form.Label>\r\n                    <Form.Select\r\n                      value={selectedInclude ? selectedInclude.id : ''}\r\n                      onChange={(e) => {\r\n                        const selectedId = e.target.value;\r\n                        const selectedInclude = allIncludes.find((include) => include.id === selectedId);\r\n                        setSelectedInclude(selectedInclude);\r\n                      }}\r\n                    >\r\n                      <option value=\"\">Selecciona un Include</option>\r\n                      {allIncludes.map((include) => (\r\n                        <option key={include.id} value={include.id}>\r\n                          {include.name}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Select>\r\n                  </Form.Group>\r\n                  <button\r\n                    className=\"app-content-headerButton\"\r\n                    onClick={async () => {\r\n                      if (selectedInclude) {\r\n                        const updatedIncludes = [...productIncludesData, selectedInclude.id];\r\n\r\n                        // Actualizar el estado local\r\n                        setProductIncludesData(updatedIncludes);\r\n\r\n                        // Actualizar la base de datos\r\n                        const db = getFirestore(app);\r\n                        const productRef = doc(db, selectedCollection, selectedProduct.id);\r\n\r\n                        try {\r\n                          await updateDoc(productRef, {\r\n                            includes: updatedIncludes,\r\n                          });\r\n\r\n                          console.log('Include agregado con éxito a la base de datos');\r\n                        } catch (error) {\r\n                          console.error('Error al agregar el include a la base de datos:', error);\r\n                        }\r\n                      }\r\n                    }}\r\n                  >\r\n                    Agregar Include\r\n                  </button>\r\n\r\n                  <ul>\r\n                    {productIncludesData.map((includeId, index) => {\r\n                      const matchingInclude = allIncludes.find((include) => include.id === includeId);\r\n\r\n                      if (matchingInclude) {\r\n                        return (\r\n                          <div key={index} className=\"featuredFeaturesSelected\">\r\n\r\n                            <div style={{ display: 'flex' }}>\r\n                              <li key={index}>\r\n                                <button\r\n                                  variant=\"danger\"\r\n                                  className=\"app-content-headerButton\"\r\n                                  type=\"button\"\r\n                                  onClick={() => handleRemoveInclude(matchingInclude.id)}\r\n                                >\r\n                                  <CloseIcon fontSize=\"\" />\r\n                                </button>\r\n                                {matchingInclude.img && (\r\n                                  <div>\r\n                                    <img src={matchingInclude.img} alt={`Imagen para ${matchingInclude.name}`} style={{ width: '77px', height: '77px', borderRadius: '10px' }} />\r\n                                  </div>\r\n                                )}\r\n                                <div>\r\n                                  <div>ID: {matchingInclude.id}</div>\r\n                                  <div>Nombre: {matchingInclude.name}</div>\r\n                                </div>\r\n                              </li>\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      } else {\r\n                        return (\r\n                          <li key={index}>\r\n                            <p>&quot;Incluye&quot; no encontrado</p>\r\n                          </li>\r\n                        );\r\n                      }\r\n                    })}\r\n                  </ul>\r\n                </Form.Group>\r\n\r\n\r\n\r\n\r\n\r\n              </div>\r\n            )}\r\n            <button\r\n              onClick={handleUpdateProduct}\r\n              variant=\"danger\"\r\n              className=\"app-content-headerButton\"\r\n              style={{ marginTop: '20px' }}\r\n            >\r\n              Guardar Cambios\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditProduct;\r\n","C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\Favicon\\index.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\Footer\\index.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\Head\\index.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\IncludesItem\\index.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\LineBanner\\index.jsx",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\LineContainer\\index.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\LineProductCard\\index.jsx",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\LinesContainer\\index.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\Loading\\index.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\MainBanner\\index.jsx",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\MetaTags\\index.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\MultipleProdContainer\\index.jsx",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\Nav\\index.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\NavItem\\index.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\NotFound\\index.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\Product\\index.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\ProductBanners\\index.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\ProductBanners\\indexOld.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\ProductCard\\index.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\ProductContent\\index.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\ProductFeatures\\index.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\ProductMorePhotos\\index.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\ProductSpecsTable\\index.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\ProductVideos\\index.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\SearchButton\\index.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\SearchContainer\\index.jsx",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\SearchContainer\\indexFull.jsx",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\SocialContainer\\index.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\StoreButton\\index.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\SupportForms\\index.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\SupportPageContent\\index.jsx",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\ThanksAndRedir\\index.js",[],[],"C:\\Users\\leandro\\Desktop\\repo aiwa\\BU\\BU05-02\\aiwaelectronicsConAdmin\\components\\YoutubeBanner\\index.js",[],[],{"ruleId":"398","severity":1,"message":"399","line":45,"column":13,"nodeType":"400","endLine":45,"endColumn":54},{"ruleId":"401","severity":1,"message":"402","line":45,"column":6,"nodeType":"403","endLine":45,"endColumn":25,"suggestions":"404"},{"ruleId":"401","severity":1,"message":"405","line":376,"column":6,"nodeType":"403","endLine":376,"endColumn":43,"suggestions":"406"},"jsx-a11y/alt-text","Image elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'router'. Either include it or remove the dependency array.","ArrayExpression",["407"],"React Hook useEffect has a missing dependency: 'getFeaturedFeaturesForProduct'. Either include it or remove the dependency array.",["408"],{"desc":"409","fix":"410"},{"desc":"411","fix":"412"},"Update the dependencies array to be: [router, router.query.link]",{"range":"413","text":"414"},"Update the dependencies array to be: [selectedProduct, selectedCollection, getFeaturedFeaturesForProduct]",{"range":"415","text":"416"},[1319,1338],"[router, router.query.link]",[13608,13645],"[selectedProduct, selectedCollection, getFeaturedFeaturesForProduct]"]